name: Testing
permissions:
  contents: write
on: 
  push:
    branches:
      - main
      - dev
  pull_request:
  # schedule:
  #   - cron:  '0 0 * * *'
env:
  ACTION_CHECKOUT: actions/checkout@v3
  ACTION_UPLOAD_ARTIFACT: actions/upload-artifact@v3

jobs:
  #############################################################################
  # Lint
  #############################################################################
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: ${ACTION_CHECKOUT}
    - name: Install modules
      run: npm install
    - name: Run ESLint
      run: npm run-script lint
    
  ##############################################################################
  # Unit test
  ##############################################################################
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-18.04
        - ubuntu-20.04
        - ubuntu-22.04
        - macos-latest
        - windows-latest
    needs: [lint]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: ${ACTION_CHECKOUT}
    - name: Install modules
      run: npm install
    - name: Run unit tests
      run: npm test
    - name: Save HTML report artifact
      uses: ${ACTION_UPLOAD_ARTIFACT}
      if: always()
      with:
        name: test-report-html-${{ matrix.os }}
        path: mochawesome-report

  publish-unit-test:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs: [unit-test]
    steps:
    - name: Checkout
      uses: ${ACTION_CHECKOUT}
    - name: Install modules
      run: npm install
    # ubuntu 18.04
    - name: Download artifacts Ubuntu 18.04
      uses: actions/download-artifact@v3
      with:
        name: test-report-html-ubuntu-18.04
        path: test-report-html-ubuntu-18.04
    # ubuntu 20.04
    - name: Download artifacts Ubuntu 20.04
      uses: actions/download-artifact@v3
      with:
        name: test-report-html-ubuntu-20.04
        path: test-report-html-ubuntu-20.04
    # ubuntu 22.04
    - name: Download artifacts Ubuntu 22.04
      uses: actions/download-artifact@v3
      with:
        name: test-report-html-ubuntu-22.04
        path: test-report-html-ubuntu-22.04
    # macos-latest
    - name: Download artifacts macos-latest
      uses: actions/download-artifact@v3
      with:
        name: test-report-html-macos-latest
        path: test-report-html-macos-latest
    # windows-latest
    - name: Download artifacts windows-latest
      uses: actions/download-artifact@v3
      with:
        name: test-report-html-windows-latest
        path: test-report-html-windows-latest
    - name: Rename directories
      run: |
        mv test-report-html-ubuntu-18.04 docs
        mv test-report-html-ubuntu-20.04 docs
        mv test-report-html-ubuntu-22.04 docs
        mv test-report-html-macos-latest docs
        mv test-report-html-windows-latest docs
        sed -i 's/commit_hash/'$GITHUB_SHA'/' docs/index.html
    - name: 'ğŸš€ Deploy'
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages
        folder: docs

  ##############################################################################
  # Documentation
  ##############################################################################
  generate-api-doc:
    if: always()
    runs-on: ubuntu-20.04
    needs: [unit-test]
    steps:
      - name: Generate doc
        run: |
          npx typedoc
      - name: Save documentation
        uses: ${ACTION_UPLOAD_ARTIFACT}
        with:
          name: api-doc
          path: out_docs

  ##############################################################################
  # Publish package
  ##############################################################################
  publish-release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - name: Checkout
        uses: ${ACTION_CHECKOUT}
      - name: Set node enviroment
        uses: actions/setup-node@v3
        with:
          node-version: 12
      - name: npm install
        run: |
          npm install
      - name: Publish NPM package
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          check-version: true
      - name: Package not published
        if: steps.publish.outputs.type == '' || steps.publish.outputs.type == 'none'
        run: |
          echo "Error, version not changed."
          exit 1
      - name: Tar for release
        run: |
          cd ..
          tar -cvzf teroshdl2-${{ steps.publish.outputs.version }}.tar.gz colibri2
          mv teroshdl2-${{ steps.publish.outputs.version }}.tar.gz colibri2
          cd colibri2
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.publish.outputs.version }}
          prerelease: false
          # files: |
          #   *.tar.gz
      - name: Released
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"



